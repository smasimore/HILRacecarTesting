/**	
 * File: IRSensorLookup.h
 * Author: Sarah Masimore
 * Last Updated Date: 04/19/2018
 * Description: Lookup table mapping mm to duty cycle required to produce
 *              expected 12-bit voltage value for IR sensor.
 */
 
 // todo: using sensorboard cycle through adc values and print adc and output of IR_Calculate

#include <stdint.h>

#define IR_MIN_MM 73
#define IR_MAX_MM 610

// IR mm value is index + IR_MIN_MM, duty is in tenth of a percent
uint16_t IRMMToDuty[538] = {
	916,
	904,
	891,
	879,
	867,
	855,
	843,
	842,
	830,
	818,
	806,
	794,
	781,
	769,
	757,
	745,
	733,
	728,
	723,
	718,
	713,
	708,
	703,
	698,
	694,
	689,
	684,
	684,
	679,
	673,
	667,
	661,
	655,
	648,
	642,
	636,
	630,
	630,
	625,
	620,
	615,
	610,
	605,
	601,
	596,
	591,
	586,
	586,
	583,
	579,
	576,
	572,
	569,
	565,
	562,
	558,
	555,
	551,
	548,
	544,
	541,
	537,
	534,
	530,
	527,
	523,
	520,
	516,
	513,
	510,
	506,
	502,
	499,
	495,
	492,
	489,
	485,
	485,
	484,
	481,
	479,
	476,
	474,
	471,
	469,
	467,
	464,
	462,
	459,
	457,
	454,
	452,
	449,
	447,
	445,
	442,
	440,
	439,
	437,
	435,
	434,
	432,
	430,
	428,
	426,
	424,
	422,
	420,
	418,
	417,
	415,
	413,
	411,
	409,
	407,
	405,
	403,
	402,
	400,
	398,
	396,
	394,
	392,
	390,
	388,
	386,
	385,
	385,
	383,
	381,
	379,
	377,
	375,
	374,
	372,
	370,
	368,
	366,
	364,
	362,
	361,
	359,
	357,
	355,
	353,
	351,
	349,
	349,
	348,
	347,
	346,
	345,
	344,
	343,
	342,
	341,
	341,
	340,
	339,
	338,
	337,
	336,
	335,
	334,
	333,
	332,
	332,
	331,
	330,
	329,
	328,
	327,
	326,
	325,
	324,
	323,
	323,
	321,
	320,
	319,
	318,
	317,
	315,
	314,
	313,
	312,
	311,
	310,
	309,
	307,
	306,
	305,
	304,
	303,
	302,
	300,
	299,
	299,
	297,
	296,
	295,
	294,
	293,
	292,
	291,
	290,
	289,
	288,
	287,
	286,
	285,
	284,
	282,
	281,
	281,
	279,
	278,
	277,
	276,
	275,
	274,
	273,
	272,
	271,
	270,
	269,
	268,
	268,
	267,
	266,
	266,
	265,
	264,
	264,
	263,
	263,
	262,
	261,
	261,
	260,
	260,
	259,
	259,
	258,
	257,
	257,
	256,
	256,
	255,
	254,
	254,
	253,
	253,
	252,
	251,
	251,
	250,
	250,
	249,
	249,
	248,
	247,
	247,
	246,
	245,
	245,
	244,
	244,
	243,
	243,
	242,
	242,
	242,
	241,
	241,
	240,
	240,
	239,
	239,
	238,
	238,
	238,
	237,
	237,
	236,
	236,
	235,
	235,
	234,
	234,
	233,
	233,
	232,
	232,
	231,
	231,
	230,
	230,
	230,
	229,
	229,
	228,
	228,
	227,
	227,
	226,
	226,
	225,
	225,
	224,
	224,
	223,
	222,
	222,
	221,
	220,
	220,
	219,
	219,
	218,
	218,
	217,
	216,
	216,
	215,
	214,
	214,
	213,
	213,
	212,
	211,
	211,
	210,
	209,
	209,
	208,
	208,
	207,
	207,
	206,
	205,
	205,
	204,
	203,
	203,
	202,
	202,
	201,
	201,
	201,
	201,
	200,
	200,
	200,
	200,
	200,
	199,
	199,
	199,
	199,
	199,
	198,
	198,
	198,
	198,
	198,
	198,
	197,
	197,
	197,
	197,
	197,
	196,
	196,
	196,
	196,
	195,
	195,
	195,
	194,
	194,
	193,
	193,
	193,
	192,
	192,
	191,
	191,
	191,
	190,
	190,
	189,
	189,
	188,
	188,
	188,
	187,
	187,
	187,
	186,
	186,
	185,
	185,
	185,
	184,
	184,
	183,
	183,
	183,
	182,
	182,
	182,
	181,
	181,
	180,
	180,
	180,
	179,
	179,
	179,
	178,
	178,
	178,
	177,
	177,
	177,
	177,
	176,
	176,
	175,
	175,
	175,
	174,
	174,
	174,
	173,
	173,
	173,
	173,
	172,
	172,
	172,
	172,
	172,
	172,
	172,
	171,
	171,
	171,
	171,
	171,
	171,
	171,
	170,
	170,
	170,
	170,
	170,
	170,
	170,
	169,
	169,
	169,
	169,
	169,
	169,
	169,
	168,
	168,
	168,
	168,
	168,
	168,
	168,
	167,
	167,
	167,
	167,
	167,
	167,
	166,
	166,
	166,
	166,
	165,
	165,
	165,
	165,
	164,
	164,
	164,
	163,
	163,
	163,
	163,
	162,
	162,
	162,
	162,
	161,
	161,
	161,
	160,
	160,
	160,
	160,
	159,
	159,
	159,
	159,
	158,
	158,
	158,
	158,
	157,
	157,
	157,
	156,
	156,
	156,
	156,
	156,
	155,
	155,
	155,
	154,
	154,
	154,
	154,
	153,
	153,
	153,
	153,
	152,
	152,
	152,
	152,
	151,
};
